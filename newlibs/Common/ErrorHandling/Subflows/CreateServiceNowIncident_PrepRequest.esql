BROKER SCHEMA ErrorHandling.Subflows
--DECLARE cre NAMESPACE 'http://www.service-now.com/CreateIncidentFromError';
DECLARE cre NAMESPACE 'http://www.service-now.com/incident';
DECLARE NS1 NAMESPACE 'http://schemas.xmlsoap.org/soap/envelope/';

CREATE COMPUTE MODULE CreateServiceNowIncident_PrepRequest
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE WS_FIELDS CHARACTER;
		DECLARE WS_FIELD CHARACTER;
		
		
		call Common.Routines.ESQL.GetUserDefinedConfigurableServiceProperty( 'SERVICENOW', 'WS_FIELDS')INTO WS_FIELDS;
			
		call Common.Routines.ESQL.GetUserDefinedConfigurableServiceProperty( 'SERVICENOW', 'LOGIN_ID')INTO Environment.SERVICENOW.LOGIN_ID;
		call Common.Routines.ESQL.GetUserDefinedConfigurableServiceProperty( 'SERVICENOW', 'LOGIN_PW')INTO Environment.SERVICENOW.LOGIN_PW;
		call Common.Routines.ESQL.GetUserDefinedConfigurableServiceProperty( 'SERVICENOW', 'WebServiceURL')INTO Environment.SERVICENOW.WebServiceURL;
		
		SET OutputLocalEnvironment.Destination.SOAP.Request.Transport.HTTP.WebServiceURL = Environment.SERVICENOW.WebServiceURL;

		SET OutputRoot.HTTPRequestHeader."Authorization"='Basic '||BASE64ENCODE(Environment.SERVICENOW.LOGIN_ID||':'||Environment.SERVICENOW.LOGIN_PW); 
		
		SET WS_FIELD = TRIM(SUBSTRING(WS_FIELDS BEFORE ','));
		
		WHILE (COALESCE(WS_FIELD, '') <> '') DO
			SET OutputRoot.XMLNSC.cre:generateSessionLink.cre:{WS_FIELD} = GetEnvOrDefault(WS_FIELD);
			SET WS_FIELDS = SUBSTRING(WS_FIELDS AFTER ',');
			SET WS_FIELD = TRIM(SUBSTRING(WS_FIELDS BEFORE ','));
		END WHILE;
		
		-- Allow 10 attempts to create the new incident.
		DECLARE Attempt INTEGER 0;		
		
		WHILE (Attempt < 10 AND Environment.Variables.INC_NBR IS NULL) DO
			PROPAGATE TO TERMINAL 'out' DELETE NONE;
			SET Attempt = Attempt + 1;
			IF (Attempt < 10 AND Environment.Variables.INC_NBR IS NULL) THEN
				DECLARE s BOOLEAN SLEEP(10000);
				IF (NOT s) THEN
					SET Attempt = 10; --If it couldn't sleep 10 seconds, it is most likely trying to shut down, so get out
				END IF;
			END IF;			
		END WHILE;
	
			
		RETURN FALSE;
	END;
	
	CREATE FUNCTION GetEnvOrDefault(IN Property CHARACTER ) RETURNS CHARACTER
	BEGIN
		DECLARE PropertyValue CHARACTER;
		
		IF (COALESCE(Environment.SERVICENOW.{Property}, '') <> '') THEN
			SET PropertyValue = Environment.SERVICENOW.{Property};
		ELSE			
			begin
				DECLARE CONTINUE HANDLER FOR SQLSTATE LIKE'%' BEGIN END;
				call Common.Routines.ESQL.GetUserDefinedConfigurableServiceProperty( 'SERVICENOW', Property)INTO PropertyValue;			
			end;
		END IF;
			
		RETURN PropertyValue;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;




CREATE COMPUTE MODULE CreateServiceNowIncident_HandleServiceNowReply --GOOD
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		SET Environment.Variables.INC_NBR = InputRoot.XMLNSC.cre:generateSessionLinkResponse.cre:error_message;
		RETURN TRUE;
	END;
END MODULE;