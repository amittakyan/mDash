

CREATE COMPUTE MODULE ENT_PS360_ORU_ENT_MTITS_ORU_Transform
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
        DECLARE hl7 NAMESPACE 'urn:hl7-org:v2xml';
        DECLARE MSH6,DestRegion CHARACTER;
        
		
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		SET Environment.MsgID = InputRoot.MQRFH2.usr.uniqueMessageId;
		
		-- SET OutputRoot.DFDL.hl7:HL7.hl7:MSH = InputRoot.DFDL.hl7:HL7.hl7:MSH;
		
		SET MSH6 = CAST(InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.6.ReceivingFacility".hl7:"HD.1" AS CHARACTER CCSID 1208);
		
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.1.FieldSeparator" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.1.FieldSeparator";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.2.ServiceString" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.2.ServiceString";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.3.SendingApplication" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.3.SendingApplication";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.4.SendingFacility".hl7:"HD.1" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.4.SendingFacility".hl7:"HD.1";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.6.ReceivingFacility" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.6.ReceivingFacility";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.7.DateTimeOfMessage" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.7.DateTimeOfMessage";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.9.MessageType" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.9.MessageType";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.10.MessageControlID" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.10.MessageControlID";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.11.ProcessingID".hl7:"PT.1" = 'P';
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.12.VersionID".hl7:"VID.1" = '2.3';
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.13.SequenceNumber" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.13.SequenceNumber";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.15.AcceptAcknowledgmentType" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.15.AcceptAcknowledgmentType";
		SET OutputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.16.ApplicationAcknowledgmentType" = InputRoot.DFDL.hl7:HL7.hl7:MSH.hl7:"MSH.10.MessageControlID";
		
		DECLARE outanyHL7Segment REFERENCE TO OutputRoot.DFDL.hl7:HL7;
		DECLARE newSegment REFERENCE TO OutputRoot.DFDL.hl7:HL7;
						
		DECLARE ref_anyHL7Segment REFERENCE TO InputRoot.DFDL.hl7:HL7.hl7:anyHL7Segment;
		
		WHILE(LASTMOVE(ref_anyHL7Segment)) DO
								
			CASE FIELDNAME(ref_anyHL7Segment.[1])
							
			WHEN 'PID' THEN
				 CREATE LASTCHILD OF outanyHL7Segment AS newSegment FROM ref_anyHL7Segment;
 				 CALL CommonHCP.Routines.ESQL.procClearFieldsInSet(newSegment,'6,9,10,11,12,13,14,15,16,17,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40');
 			
 			WHEN 'OBR' THEN
				 
				 DECLARE OBR4_1 ,OBR4_2,OBR4_3 CHARACTER;
				 DECLARE OBR3_1 CHARACTER;
				 
				 CREATE LASTCHILD OF outanyHL7Segment AS newSegment FROM ref_anyHL7Segment;
 				 CALL CommonHCP.Routines.ESQL.procClearFieldsInSet(newSegment,'5,6,9,10,11,12,14,15,16,17,22,23,24,26,27,29,30,31,34,');
 				 
 				 CALL CommonHCP.Routines.ESQL.GetValue(newSegment, 'OBR\OBR.3.FillerOrderNumber\EI.1') INTO OBR3_1;
 				 
 				 IF (OBR3_1 IS NOT NULL ) THEN
	 				CALL ChopLeadingZero ( OBR3_1) INTO OBR3_1;
	 				SET Environment.Accession = OBR3_1;
 				 END IF;
 				 
 				 CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.3.FillerOrderNumber\EI.1', OBR3_1);
 				 /*
 				 --Get the OBR.4 values
 				 CALL CommonHCP.Routines.ESQL.GetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.1') INTO OBR4_1;
 				 CALL CommonHCP.Routines.ESQL.GetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.2') INTO OBR4_2;
 				 CALL CommonHCP.Routines.ESQL.GetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.3') INTO OBR4_3;
 				 				 
 				 
 				 IF (OBR4_1 IS NOT NULL ) AND (OBR4_2 IS NOT NULL) AND (OBR4_3 IS NULL) AND CONTAINS(OBR4_1, '_') THEN
 				 	CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.1', SUBSTRING(OBR4_1 BEFORE '_'));
 				 	CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.2', SUBSTRING(OBR4_1 AFTER '_'));
 				 	CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.3', OBR4_2);
 				 END IF;
 				 */
-- 				 IF (OBR4_3 IS NOT NULL) THEN	
-- 				 	CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.2', OBR4_3);
-- 				 	CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.4.UniversalServiceIdentifier\CWE.3', NULL);
-- 				 ELSE 
 				 	
-- 				 END IF;
 				 
 				 
 				 CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.20.FillerField1', 'RAD');
 				 CALL CommonHCP.Routines.ESQL.SetValue(newSegment, 'OBR\OBR.21.FillerField2', 'PS360');	 
				 
			WHEN 'TXA' THEN
				 CREATE LASTCHILD OF outanyHL7Segment AS newSegment FROM ref_anyHL7Segment;
				 CALL CommonHCP.Routines.ESQL.procClearFieldsInSet(newSegment,'1,3,5,6,8,10,13,18,20,21,23');
				 
			WHEN 'OBX' THEN
				 CREATE LASTCHILD OF outanyHL7Segment AS newSegment FROM ref_anyHL7Segment;
				 CALL CommonHCP.Routines.ESQL.procClearFieldsInSet(newSegment,'3,4,6,7,8,9,10,11,12,13,14');
			
			END CASE;
				MOVE ref_anyHL7Segment NEXTSIBLING;
		END WHILE;
		
			
		IF (COALESCE(MSH6, '') <> '') THEN
			-- CALL CommonHCP.Routines.ESQL.GetUserDefinedConfigurableServiceProperty('FacilityToRegion', MSH4) INTO DestRegion;
			SET  DestRegion = MSH6;
			SET  OutputLocalEnvironment.Destination.MQ.DestinationData.queueName = DestRegion||'.MTITS.ORU.QL';
		ELSE
			RETURN ExcludeMessage('No MSH6 returned');
		END IF;
		
		
				
		RETURN TRUE;
	END;

	CREATE FUNCTION ExcludeMessage (IN Reason CHARACTER ) RETURNS BOOLEAN
	BEGIN
		SET Environment.ExcludeReason = Reason;
		PROPAGATE TO TERMINAL 'out1' DELETE NONE;
		RETURN FALSE;
	END;
	
	CREATE FUNCTION ChopLeadingZero (IN InputString CHARACTER ) RETURNS CHARACTER
	BEGIN
		DECLARE OutputString,TempString CHARACTER;
		SET TempString = SUBSTRING(InputString BEFORE '-');
		SET OutputString = TempString || '-' || TRIM (LEADING '0' FROM (SUBSTRING(InputString AFTER '-'))) ;
		RETURN OutputString;
	END;
	
	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
