<project name="DelConfigServices" default="init">
	<target name="base">
		
		<echo>Action selected for environment: coming from jenkins as parameter: ${env}</echo>
		<echo>The userId : coming from jenkins as parameter: ${iib.userid}</echo>
		<echo>The Jenkins current directory where code has been fetched from repository: coming from jenkins as parameter: ${curDir}</echo>
		<echo>The Jenkins build number: coming from jenkins as parameter: ${jenkins_buldnumber}</echo>
		<echo>The jenkins job name: coming from jenkins as parameter: ${jenkins_jobname}</echo>		
		
		<!-- antDir had been sent as parameter through Jenkins in DTE. But its not needed as it can be placed in the build server too at one location-->
		<!--<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${antDir}/1.0b3/ant-contrib-1.0b3.jar"/>
			</classpath>
		</taskdef>-->
		<!-- This jar is needed for switch statement, if statements and propertyregex expressions-->
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			 <classpath>
				<pathelement location="/opt/apache-ant-1.10.1/ant-contrib-1.0b3.jar/ant-contrib-1.0b3.jar/ant-contrib-1.0b3.jar"/>
			</classpath>
		</taskdef>
		
	</target>   
	
	<target name="init" depends="base">

		<!-- Directory Initializations-->
		<echo>Current Directory i.e. Jenkins directory coming as parameter: ${curDir}</echo>
		
		<!--<property name="workspaceDir" location="${curDir}/../Projects"/>-->
		<!--setting this directory to absolute path as I am not fetching code from repository to Jenkins workspace. 
		The jenkins workspace directory would be present in ${curDir} which we are sending from Jenkins as parameter
		In normal scenarios, all further directories will be relative to  ${curDir}-->
		<property name="workspaceDir" location="/var/lib/jenkins/workspace/Receiver/SPN_MTPACS_ORM_Receiver/Rollback_test"/>
		<property name="ArtifactoryFileDir" location="${workspaceDir}/temp"/>
		<echo>Project Workspace Directory: ${workspaceDir}</echo>
		
	</target>
 
 <!--Target to run Queues using runmqsc-->
	<target name="Stopmessageflow" depends="init">	
		<echo message="Stopping Messageflow on icisr031"/>
			
		<!--<scp file="${workspaceDir}/messageflow.txt" trust="true" todir="${iib.userid}:${iib.userpassword}@icisr031:/opt/mqm/bar"/> -->
		
		<sshexec trust="true" host="icisr031" username="${iib.userid}" password="${iib.userpassword}" command=". /opt/ibm/mqsi/9.0.0.1/bin/mqsiprofile;mqsistopmsgflow CHRISTUS_ENT_DEV_01 -e MidasHL7_TEST -m SPN_MTPACS_ORM_Receiver"/>
		
	  <echo message="Completed deletion of Messageflow on icisr031"/>
	</target>
	
	
	<echo message="Delete Messageflow on icisr031"/>
<target name="Deletemessageflow" depends="Stopmessageflow">	
		
		<!--<scp file="${workspaceDir}/messageflow.txt" trust="true" todir="${iib.userid}:${iib.userpassword}@icisr031:/opt/mqm/bar"/>-->
		
		<sshexec trust="true" host="icisr031" username="${iib.userid}" password="${iib.userpassword}" command=". /opt/ibm/mqsi/9.0.0.1/bin/mqsiprofile;mqsideploy CHRISTUS_ENT_DEV_01 -e MidasHL7_TEST -d SPN_MTPACS_ORM_Receiver.cmf"/>
		
		
	  <echo message="Completed deletion of Messageflow on icisr031"/>
	  
</target>

<!--<echo message="Delete Subscription on icisr031"/>
	<target name="DeleteSubscription" depends="Deletemessageflow">	
		
		<sshexec trust="true" host="icisr031" username="${iib.userid}" password="${iib.userpassword}" command=". /opt/ibm/mqsi/9.0.0.1/bin/mqsiprofile;runmqsc ${Qmgrname};delete sub ${Subscription}"/>
        
        	
	  <echo message="Completed deletion of Subscription on icisr031"/>
	  
	</target>-->
	
	<!--<echo message="Delete Queues on icisr031"/>-->
	<!--<target name="DeleteQueues" depends="DeleteSubscription">	
		
		<sshexec trust="true" host="icisr031" username="${iib.userid}" password="${iib.userpassword}" command=". /opt/ibm/mqsi/9.0.0.1/bin/mqsiprofile;runmqsc ${Qmgrname};DELETE QLOCAL ${LocalQueue}"/>
        
        	
	  <echo message="Completed deletion of Queues on icisr031"/>
	  
	  </target>-->
	
	<echo message="Delete Configurable Services on icisr031"/>
	
<target name="DelConfigService" depends="Deletemessageflow">	
		
	<!--<scp file="${workspaceDir}/DelConfigCommands.txt" trust="true" todir="${iib.userid}:${iib.userpassword}@icisr031:/opt/mqm/bar"/>-->
		
	<sshexec trust="true" host="icisr031" username="${iib.userid}" password="${iib.userpassword}" command=". /opt/ibm/mqsi/9.0.0.1/bin/mqsiprofile;mqsideleteconfigurableservice CHRISTUS_ENT_DEV_01 -c TCPIPClient -o SPN_MTPACS_ORM_Receiver;mqsireload CHRISTUS_ENT_DEV_01 -e MidasHL7_TEST"/>
	
	  <echo message="Completed deletion of Configurable Services on icisr031"/>
</target>
	<!--Target to run Queues using runmqsc-->
	
	
	
<echo message="Redploying Configurations and Queues on icisr031"/>
<target name="all" depends="init">
     
	 <ant antfile="ConfigService.xml" target="runConfigService" />
     
	 <!--<ant antfile="build.xml" target="deployBar" />-->
	 
</target>

<echo message="Redploying Bar on icisr031"/>
<target name="deployBar" depends="all">	
		<echo message="Deploy Broker Archive file - ${projectName}.bar "/>
		
		<get src="http://iaasr001:8081/artifactory/Christus/${env}/SPN_MTPACS_ORM_Receiver_Build.${env}/${artifactnum}/SPN_MTPACS_ORM_Receiver_Build.${env}-${artifactnum}.bar" dest="/var/lib/jenkins/workspace/Receiver/SPN_MTPACS_ORM_Receiver/Rollback_test/temp"/>
		
		
		<scp file="${ArtifactoryFileDir}/SPN_MTPACS_ORM_Receiver_Build.${env}-${artifactnum}.bar" trust="true" todir="${iib.userid}:${iib.userpassword}@icisr031:/opt/mqm/bar/SPN_VRAD_ORM_Sender"/>
		

		<sshexec trust="true" host="icisr031" username="${iib.userid}" password="${iib.userpassword}" command=". /opt/ibm/mqsi/9.0.0.1/bin/mqsiprofile;mqsideploy CHRISTUS_ENT_DEV_01 -e MidasHL7_TEST -a /opt/mqm/bar/SPN_MTPACS_ORM_Receiver/SPN_MTPACS_ORM_Receiver_Build.${env}-${artifactnum}.bar -w 600" failonerror="true"/>
		<echo message="Completed deployment of Broker Archive file - SPN_VRAD_ORM_Sender_Build.${env}-${artifactnum}.bar"/>
		
		
</target>
	
	
</project>